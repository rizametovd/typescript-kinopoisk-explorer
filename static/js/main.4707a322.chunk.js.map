{"version":3,"sources":["components/AboutPage/styles.module.css","components/MoviePage/styles.module.css","components/Pagination/styles.module.css","components/Header/styles.module.css","components/MovieCard/styles.module.css","components/MoviesList/styles.module.css","components/Main/styles.module.css","components/SearchForm/styles.module.css","components/Footer/styles.module.css","components/Preloader/styles.module.css","components/Genres/styles.module.css","components/App/styles.module.css","types/movieTypes.ts","store/reducers/movieReducer.ts","types/searchTypes.ts","store/reducers/searchMovieReducer.ts","types/topMoviesTypes.ts","store/reducers/topMovieReducer.ts","store/reducers/index.ts","store/index.ts","utils/constants.ts","components/Footer/Footer.tsx","store/actionCreators/searchMovieActionCreators.ts","store/actionCreators/singleMovieActionCreators.ts","store/actionCreators/topMoviesActionCreators.ts","utils/api.ts","components/SearchForm/SearchForm.tsx","images/logo.svg","components/Header/Header.tsx","hooks/useTypedSelector.ts","images/react-logo.svg","images/ts-logo.svg","images/redux-logo.svg","components/AboutPage/AboutPage.tsx","components/Preloader/Preloader.tsx","components/Genres/Genres.tsx","components/MoviePage/MoviePage.tsx","components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","utils/handlePagesCounts.ts","components/Pagination/Pagination.tsx","components/Main/Main.tsx","components/App/App.tsx","index.tsx"],"names":["module","exports","MovieActionTypes","SearchMovieActionTypes","initialState","movie","filmId","nameRu","nameEn","webUrl","posterUrl","year","filmLength","slogan","description","type","countries","genres","rating","ratingVoteCount","ratingImdb","ratingImdbVoteCount","images","posters","isLoading","movieError","TopMovieActionTypes","keyword","searchResults","isSearchResultsLoading","searchResultsCurrentPage","searchResultsPagesCount","searchMovieError","topMovies","isTopMoviesLoading","currentPage","pagesCount","fetchTopMoviesError","rootReducer","combineReducers","state","action","FETCH_TOP_MOVIES","FETCH_TOP_MOVIES_SUCCESS","payload","SET_TOP_MOVIE_PAGE","FETCH_TOP_MOVIES_ERROR","singleMovie","FETCH_MOVIE","FETCH_MOVIE_SUCCESS","FETCH_MOVIE_ERROR","SEARCH_MOVIE","SEARCH_MOVIE_SUCCESS","SET_SEARCH_MOVIE_PAGE","SET_SEARCH_KEYWORD","SET_SEARCH_PAGES_COUNT","SEARCH_MOVIE_ERROR","store","createStore","applyMiddleware","thunk","BASE_TOP_MOVIES_URL","BASE_FETCH_URL","ABOUT_PAGE","MAIN_PAGE","MOVIE_PAGE","SEARCH_PAGE","FETCH_ERROR_MESSAGE","Footer","className","styles","footer","text","Date","getFullYear","searchMovieAction","searchMovieSuccessAction","movies","setSearchPagesCount","page","setSearchPageAction","setSearchKeywordAction","message","fetchMovieSuccessAction","movieData","fetchTopMoviesAction","fetchTopMovieSuccessAction","moviesList","options","headers","checkResponse","response","ok","json","Promise","reject","searchMovie","dispatch","a","fetch","searchResultsData","setTimeout","films","console","log","SearchForm","useState","input","setInput","useDispatch","history","useHistory","formContainer","form","onSubmit","e","preventDefault","push","onChange","target","value","placeholder","autoComplete","submitButton","Header","header","to","src","Logo","alt","logo","list","listItem","link","href","rel","useTypedSelector","useSelector","AboutPage","section","title","subTitle","taskList","taskListItem","toolsList","toolsListItem","ReactLogo","logoImg","TypeScriptLogo","ReduxLogo","Preloader","preloader","Genres","genre","genresListItem","charAt","toUpperCase","slice","MoviePage","useParams","useEffect","data","fetchMovie","backgroundImage","style","poster","subtitle","genresList","map","idx","heading","MovieCard","card","image","content","length","MoviesList","location","useLocation","searchResultMovies","container","pathname","handlePagesCounts","pages","i","Pagination","searchMoviePaginationPages","topMovieePaginationPages","onTopMoviesPaginationClick","p","pagination","activeLink","onClick","Main","topMoviesData","fetchTopMovies","main","exact","path","Boolean","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0IACAA,EAAOC,QAAU,CAAC,QAAU,wBAAwB,MAAQ,sBAAsB,KAAO,qBAAqB,aAAe,6BAA6B,SAAW,yBAAyB,UAAY,0BAA0B,cAAgB,8BAA8B,QAAU,0B,sBCA5RD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,gBAAkB,gCAAgC,OAAS,uBAAuB,MAAQ,sBAAsB,SAAW,yBAAyB,WAAa,2BAA2B,eAAiB,+BAA+B,QAAU,wBAAwB,KAAO,qBAAqB,QAAU,0B,gBCAxWD,EAAOC,QAAU,CAAC,WAAa,2BAA2B,KAAO,qBAAqB,SAAW,yBAAyB,KAAO,qBAAqB,WAAa,6B,gBCAnKD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,KAAO,qBAAqB,SAAW,yBAAyB,KAAO,uB,gBCArJD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,MAAQ,sBAAsB,QAAU,wBAAwB,MAAQ,sBAAsB,OAAS,uBAAuB,MAAQ,sBAAsB,YAAc,8B,iBCAxND,EAAOC,QAAU,CAAC,UAAY,0BAA0B,KAAO,qBAAqB,KAAO,uB,gBCA3FD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,MAAQ,sBAAsB,QAAU,0B,mBCAtFD,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,KAAO,qBAAqB,MAAQ,sBAAsB,aAAe,+B,qBCAzID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,uB,kBCAzDD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,KAAO,uB,iBCA/DD,EAAOC,QAAU,CAAC,eAAiB,iC,gBCAnCD,EAAOC,QAAU,CAAC,KAAO,uB,sECDbC,E,wFAAAA,K,0BAAAA,E,0CAAAA,E,uCAAAA,M,KCEZ,ICSYC,EDTNC,EAA4B,CAChCC,MAAO,CACLC,OAAQ,EACRC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,GACRC,UAAW,GACXC,KAAM,EACNC,WAAY,GACZC,OAAQ,GACRC,YAAa,GACbC,KAAM,GACNC,UAAW,GACXC,OAAQ,GACRC,OAAQ,CACNA,OAAQ,EACRC,gBAAiB,EACjBC,WAAY,EACZC,oBAAqB,GAEvBC,OAAQ,CACNC,QAAS,KAGbC,WAAW,EACXC,WAAY,O,SChBFtB,K,4BAAAA,E,4CAAAA,E,wCAAAA,E,8CAAAA,E,wCAAAA,E,iDAAAA,M,KCLZ,ICSYuB,EDTNtB,EAAkC,CACtCuB,QAAS,GACTC,cAAe,GACfC,wBAAwB,EACxBC,yBAA0B,EAC1BC,wBAAyB,EACzBC,iBAAkB,O,SCGRN,K,oCAAAA,E,oDAAAA,E,gDAAAA,E,yCAAAA,M,KCbZ,IAAMtB,EAA+B,CACnC6B,UAAW,GACXC,oBAAoB,EACpBC,YAAa,EACbC,WAAY,EACZC,oBAAqB,MCFVC,EAAcC,YAAgB,CACzCN,UDI6B,WAAmE,IAAlEO,EAAiE,uDAAzDpC,EAAcqC,EAA2C,uCAC/F,OAAQA,EAAO1B,MACb,KAAKW,EAAoBgB,iBACvB,OAAO,2BAAKF,GAAZ,IAAmBN,oBAAoB,IAEzC,KAAKR,EAAoBiB,yBACvB,OAAO,2BAAKH,GAAZ,IAAmBP,UAAWQ,EAAOG,QAASV,oBAAoB,IAEpE,KAAKR,EAAoBmB,mBACvB,OAAO,2BAAKL,GAAZ,IAAmBL,YAAaM,EAAOG,UAEzC,KAAKlB,EAAoBoB,uBACvB,OAAO,2BAAKN,GAAZ,IAAmBN,oBAAoB,EAAOG,oBAAqBI,EAAOG,UAE5E,QACE,OAAOJ,IClBXO,YLuB0B,WAA8D,IAA7DP,EAA4D,uDAApDpC,EAAcqC,EAAsC,uCACvF,OAAQA,EAAO1B,MACb,KAAKb,EAAiB8C,YACpB,OAAO,2BAAKR,GAAZ,IAAmBhB,WAAW,IAEhC,KAAKtB,EAAiB+C,oBACpB,OAAO,2BAAKT,GAAZ,IAAmBnC,MAAOoC,EAAOG,QAASpB,WAAW,IAGvD,KAAKtB,EAAiBgD,kBACpB,OAAO,2BAAKV,GAAZ,IAAmBf,WAAYgB,EAAOG,QAASpB,WAAW,IAE5D,QACE,OAAOgB,IKnCXZ,cHOgC,WAGT,IAFvBY,EAEsB,uDAFdpC,EACRqC,EACsB,uCACtB,OAAQA,EAAO1B,MACb,KAAKZ,EAAuBgD,aAC1B,OAAO,2BAAKX,GAAZ,IAAmBX,wBAAwB,IAE7C,KAAK1B,EAAuBiD,qBAC1B,OAAO,2BAAKZ,GAAZ,IAAmBX,wBAAwB,EAAOD,cAAea,EAAOG,UAE1E,KAAKzC,EAAuBkD,sBAC1B,OAAO,2BAAKb,GAAZ,IAAmBV,yBAA0BW,EAAOG,UAEtD,KAAKzC,EAAuBmD,mBAC1B,OAAO,2BAAKd,GAAZ,IAAmBb,QAASc,EAAOG,UAErC,KAAKzC,EAAuBoD,uBAC1B,OAAO,2BAAKf,GAAZ,IAAmBT,wBAAyBU,EAAOG,UAErD,KAAKzC,EAAuBqD,mBAC1B,OAAO,2BAAKhB,GAAZ,IAAmBX,wBAAwB,EAAOG,iBAAkBS,EAAOG,UAG7E,QACE,OAAOJ,MIpCAiB,EAAQC,YAAYpB,EAAaqB,YAAgBC,MCJjDC,EACX,0FAEWC,EAAiB,0CACjBC,EAAa,aACbC,EAAY,IACZC,EAAa,QACbC,EAAc,SAQdC,EAAsB,sJ,gCCLpBC,EARU,WACvB,OACE,wBAAQC,UAAWC,IAAOC,OAA1B,SACE,sBAAMF,UAAWC,IAAOE,KAAxB,UAA+B,IAAIC,MAAOC,mB,QCMnCC,EAAoB,WAC/B,MAAO,CACL5D,KAAMZ,EAAuBgD,eAIpByB,EAA2B,SAACC,GACvC,MAAO,CACL9D,KAAMZ,EAAuBiD,qBAC7BR,QAASiC,IAIAC,EAAsB,SAACC,GAClC,MAAO,CACLhE,KAAMZ,EAAuBoD,uBAC7BX,QAASmC,IAIAC,EAAsB,SAACD,GAClC,MAAO,CACLhE,KAAMZ,EAAuBkD,sBAC7BT,QAASmC,IAIAE,EAAyB,SAACtD,GACrC,MAAO,CACLZ,KAAMZ,EAAuBmD,mBAC7BV,QAASjB,IAIAK,EAAmB,SAACkD,GAC/B,MAAO,CACLnE,KAAMZ,EAAuBqD,mBAC7BZ,QAASsC,I,yBClCAC,EAA0B,SAACC,GACtC,MAAO,CACLrE,KAAMb,EAAiB+C,oBACvBL,QAASwC,ICRAC,EAAuB,WAClC,MAAO,CACLtE,KAAMW,EAAoBgB,mBAIjB4C,EAA6B,SAACC,GACzC,MAAO,CACLxE,KAAMW,EAAoBiB,yBAC1BC,QAAS2C,IAWAlD,EAAsB,SAAC6C,GAClC,MAAO,CACLnE,KAAMW,EAAoBoB,uBAC1BF,QAASsC,ICTPM,EAAU,CACdC,QAAS,CAAE,YAAa,yCAGpBC,EAAgB,SAACC,GACrB,OAAOA,EAASC,GAAKD,EAASE,OAASC,QAAQC,OAAR,qFAmCnCC,EAAc,SAACrE,GAAgC,IAAdoD,EAAa,uDAAN,EAC5C,8CAAO,WAAOkB,GAAP,iBAAAC,EAAA,sEAEHD,EAAStB,KAFN,SAGoBwB,MAAM,GAAD,OACvBrC,EADuB,iDACgCnC,EADhC,iBACgDoD,GAC1ES,GALC,cAGGG,EAHH,gBAO6BD,EAAcC,GAP3C,OAOGS,EAPH,OASHC,YAAW,WACTJ,EAASnB,EAAoBsB,EAAkBhE,aAC/C6D,EAASrB,EAAyBwB,EAAkBE,QACpDL,EAAShB,EAAuBmB,EAAkBzE,YACjD,KAbA,kDAeH0E,YAAW,kBAAMJ,EAASjE,EAAiBmC,MAAuB,KAClEoC,QAAQC,IAAR,MAhBG,0DAAP,uD,iBCtBaC,EAlCc,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOC,EAAP,KAAcC,EAAd,KACMX,EAAWY,cACXC,EAAUC,cAehB,OACE,qBAAK1C,UAAWC,IAAO0C,cAAvB,SACE,uBAAM3C,UAAWC,IAAO2C,KAAMC,SAX4B,SAACC,GAC7DA,EAAEC,iBAEFnB,EAASD,EAAYW,IACrBG,EAAQO,KAAR,WAAiBnD,IACjB0C,EAAS,IACTX,EAASjB,EAAoB,KAK3B,UACE,uBACEX,UAAWC,IAAOqC,MAClBW,SAlByD,SAACH,GAChEP,EAASO,EAAEI,OAAOC,QAkBZA,MAAOb,EACPc,YAAY,wFACZC,aAAa,QAEf,wBAAQrD,UAAWC,IAAOqD,aAAc5G,KAAK,iB,iBCpCtC,OAA0B,iCCmC1B6G,GA7BU,WACvB,OACE,yBAAQvD,UAAWC,IAAOuD,OAA1B,UACE,cAAC,IAAD,CAAMC,GAAI9D,EAAV,SACE,qBAAK+D,IAAKC,GAAMC,IAAI,2BAAO5D,UAAWC,IAAO4D,SAG/C,cAAC,EAAD,IACA,qBAAI7D,UAAWC,IAAO6D,KAAtB,UACE,oBAAI9D,UAAWC,IAAO8D,SAAtB,SACE,cAAC,IAAD,CAAMN,GAAE,WAAM/D,GAAcM,UAAWC,IAAO+D,KAA9C,iEAIF,oBAAIhE,UAAWC,IAAO8D,SAAtB,SACE,mBACEE,KAAK,8DACLjE,UAAWC,IAAO+D,KAClBd,OAAO,SACPgB,IAAI,aAJN,oIClBGC,GAAoDC,I,mBCHlD,OAA0B,uCCA1B,OAA0B,oCCA1B,OAA0B,uCCqC1BC,GAhCa,WAC1B,OACE,0BAASrE,UAAWC,KAAOqE,QAA3B,UACE,oBAAItE,UAAWC,KAAOsE,MAAtB,+DACA,mBAAGvE,UAAWC,KAAOE,KAArB,oPAEA,oBAAIH,UAAWC,KAAOuE,SAAtB,kDACA,qBAAIxE,UAAWC,KAAOwE,SAAtB,UACE,oBAAIzE,UAAWC,KAAOyE,aAAtB,2HACA,oBAAI1E,UAAWC,KAAOyE,aAAtB,mJACA,oBAAI1E,UAAWC,KAAOyE,aAAtB,wMAGF,oBAAI1E,UAAWC,KAAOuE,SAAtB,gFACA,qBAAIxE,UAAWC,KAAO0E,UAAtB,UACE,qBAAI3E,UAAWC,KAAO2E,cAAtB,UACE,qBAAKlB,IAAKmB,GAAWjB,IAAI,kFAAiB5D,UAAWC,KAAO6E,UAC5D,4CAEF,qBAAI9E,UAAWC,KAAO2E,cAAtB,UACE,qBAAKlB,IAAKqB,GAAgBnB,IAAI,wDAAqB5D,UAAWC,KAAO6E,UACrE,iDAEF,qBAAI9E,UAAWC,KAAO2E,cAAtB,UACE,qBAAKlB,IAAKsB,GAAWpB,IAAI,mDAAgB5D,UAAWC,KAAO6E,UAC3D,mD,wCCpBKG,GARoB,WAC/B,OACI,qBAAKjF,UAAWC,KAAOiF,UAAvB,SACI,mBAAGlF,UAAWC,KAAOE,KAArB,oE,oBCOGgF,GANwB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACxC,OACE,oBAAIpF,UAAWC,KAAOoF,eAAtB,SAAuCD,EAAME,OAAO,GAAGC,cAAgBH,EAAMI,MAAM,MCmDxEC,GA9Ca,WAC1B,IAAQxJ,EAAWyJ,cAAXzJ,OACF2F,EAAWY,cACjB,EAAyC2B,IAAiB,SAAChG,GAAD,OAAWA,EAAMO,eAAnEvB,EAAR,EAAQA,UAAWnB,EAAnB,EAAmBA,MAAOoB,EAA1B,EAA0BA,WAClBlB,EAAqEF,EAArEE,OAAQC,EAA6DH,EAA7DG,OAAQM,EAAqDT,EAArDS,YAAaJ,EAAwCL,EAAxCK,UAAWC,EAA6BN,EAA7BM,KAAMM,EAAuBZ,EAAvBY,OAAQL,EAAeP,EAAfO,WAM9D,OAJAoJ,qBAAU,WACR/D,EX4Be,SAAC3F,GAClB,8CAAO,WAAO2F,GAAP,iBAAAC,EAAA,sEAEHD,EF1CG,CACLlF,KAAMb,EAAiB8C,cEuClB,SAGoBmD,MAAM,GAAD,OAAIrC,EAAJ,uBAAiCxD,GAAUkF,GAHpE,cAGGG,EAHH,gBAIqBD,EAAcC,GAJnC,OAIGP,EAJH,OAMHiB,YAAW,kBAAMJ,EAASd,EAAwBC,EAAU6E,SAAQ,KANjE,kDAQH1D,QAAQC,IAAR,MACAH,YAAW,kBAAMJ,GFrCSf,EEqCgBf,EFpCvC,CACLpD,KAAMb,EAAiBgD,kBACvBN,QAASsC,KAHkB,IAACA,IEqCuC,KAT9D,0DAAP,sDW7BWgF,CAAW5J,MACnB,CAACA,IAGF,0BAAS+D,UAAWC,KAAOqE,QAA3B,UACE,qBACEtE,UAAWC,KAAO6F,gBAClBC,MAAO,CAAED,gBAAgB,OAAD,OAASzJ,EAAT,QAGzBc,GAAa,cAAC,GAAD,KACZA,KAAeC,GAAc,oBAAI4C,UAAWC,KAAOY,QAAtB,SAAgCzD,KAE7DD,IAAcC,GACd,qCACE,qBAAKsG,IAAKrH,EAAWuH,IAAI,uCAAS5D,UAAWC,KAAO+F,SACpD,gCACE,oBAAIhG,UAAWC,KAAOsE,MAAtB,SAA8BrI,IAC9B,qBAAI8D,UAAWC,KAAOgG,SAAtB,UACG9J,GAAM,UAAOA,EAAP,MACP,+BAAOG,OAERC,GAAc,oBAAGyD,UAAWC,KAAOgG,SAArB,qHAAmD1J,EAAnD,aAEf,oBAAIyD,UAAWC,KAAOiG,WAAtB,SACGtJ,EAAOuJ,KAAI,WAAYC,GAAZ,IAAGhB,EAAH,EAAGA,MAAH,OACV,cAAC,GAAD,CAAQA,MAAOA,GAAYgB,QAI/B,oBAAIpG,UAAWC,KAAOoG,QAAtB,8DACA,mBAAGrG,UAAWC,KAAOE,KAArB,SAA4B1D,c,oBCrBzB6J,GA1BqB,SAAC,GAA2C,IAAzCpK,EAAwC,EAAxCA,OAAQW,EAAgC,EAAhCA,OAAQD,EAAwB,EAAxBA,OAAQP,EAAgB,EAAhBA,UAC7D,OACE,sBAAK2D,UAAWC,KAAOsG,KAAvB,UACE,qBAAK7C,IAAKrH,EAAWuH,IAAI,6CAAU5D,UAAWC,KAAOuG,QACrD,sBAAKxG,UAAWC,KAAOwG,QAAvB,UACE,oBAAIzG,UAAWC,KAAOsE,MAAtB,SAA8BrI,IAC9B,oBAAG8D,UAAWC,KAAOpD,OAArB,yDAAuCA,EAAvC,SACCD,EAAOuJ,KAAI,WAAYC,GAAS,IAAlBhB,EAAiB,EAAjBA,MACb,OAAIxI,EAAO8J,SAAWN,EAAM,EAExB,sBAAgBpG,UAAWC,KAAOmF,MAAlC,SACGA,GADQgB,GAMb,uBAAgBpG,UAAWC,KAAOmF,MAAlC,UACGA,EADH,IACW,MADAgB,a,oBCoBRO,GAlCc,WAC3B,IAAMC,EAAWC,cACXjJ,EAAYuG,IAAiB,SAAChG,GAAD,OAAWA,EAAMP,UAAUA,aACxDkJ,EAAqB3C,IAAiB,SAAChG,GAAD,OAAWA,EAAMZ,cAAcA,iBAE3E,OACE,qBAAKyC,UAAWC,KAAO8G,UAAvB,SACE,oBAAI/G,UAAWC,KAAO6D,KAAtB,SACG8C,EAASI,WAAT,WAA0BnH,GACzB,mCACGiH,EAAmBX,KAAI,SAACnK,GAAD,OACtB,oBAAuBgE,UAAWC,KAAO8D,SAAzC,SACE,cAAC,IAAD,CAAMN,GAAE,WAAM7D,EAAN,YAAoB5D,EAAMC,QAAU+D,UAAWC,KAAO+D,KAA9D,SACE,cAAC,GAAD,eAAehI,OAFVA,EAAMC,aAQnB,mCACG2B,EAAUuI,KAAI,SAACnK,GAAD,OACb,oBAAuBgE,UAAWC,KAAO8D,SAAzC,SACE,cAAC,IAAD,CAAMN,GAAE,WAAM7D,EAAN,YAAoB5D,EAAMC,QAAU+D,UAAWC,KAAO+D,KAA9D,SACE,cAAC,GAAD,eAAehI,OAFVA,EAAMC,kBCzBhBgL,GAAoB,SAC/BC,EACAnJ,EACAD,GAEA,GAAIC,EAAa,EACf,GAAID,GAAe,EACjB,IAAK,IAAIqJ,EAAIrJ,EAAc,EAAGqJ,GAAKrJ,EAAc,IAC/CoJ,EAAMlE,KAAKmE,GnBAY,KmBCnBA,GAF8CA,UAKpD,IAAK,IAAIA,EAAI,EAAGA,GAAK,IACnBD,EAAMlE,KAAKmE,GnBLY,KmBMnBA,GAFkBA,UAM1B,IAAK,IAAIA,EAAI,EAAGA,GAAKpJ,EAAYoJ,IAC/BD,EAAMlE,KAAKmE,I,oBCmDFC,GA9Dc,WAC3B,IAAMR,EAAWC,cACXjF,EAAWY,cACjB,EAAoC2B,IAAiB,SAAChG,GAAD,OAAWA,EAAMP,aAA9DG,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,YACpB,EAAuEqG,IACrE,SAAChG,GAAD,OAAWA,EAAMZ,iBADXG,EAAR,EAAQA,wBAAyBD,EAAjC,EAAiCA,yBAA0BH,EAA3D,EAA2DA,QAIrD+J,EAAuC,GACvCC,EAAqC,GAE3CL,GAAkBK,EAA0BvJ,EAAYD,GACxDmJ,GAAkBI,EAA4B3J,EAAyBD,GAEvE,IAAM8J,EAA6B,SAACC,GhBFD,IAAC9G,EgBGlCkB,GhBHkClB,EgBGH8G,EhBF1B,CACL9K,KAAMW,EAAoBmB,mBAC1BD,QAASmC,MgBQX,OACE,qBAAKV,UAAWC,KAAOwH,WAAvB,SACE,oBAAIzH,UAAWC,KAAO6D,KAAtB,SACG8C,EAASI,WAAarH,EACrB,mCACG2H,EAAyBnB,KAAI,SAACzF,GAAD,OAC5B,oBAAeV,UAAWC,KAAO8D,SAAjC,SACE,cAAC,IAAD,CACEN,GAAG,IACHzD,UAAS,UAAKC,KAAO+D,KAAZ,YAAoBlG,IAAgB4C,EAAOT,KAAOyH,WAAa,IACxEC,QAAS,kBAAMJ,EAA2B7G,IAH5C,SAKGA,KANIA,QAYb,mCACG2G,EAA2BlB,KAAI,SAACzF,GAAD,OAC9B,oBAAeV,UAAWC,KAAO8D,SAAjC,SACE,cAAC,IAAD,CACEN,GAAG,IACHzD,UAAS,UAAKC,KAAO+D,KAAZ,YACPvG,IAA6BiD,EAAOT,KAAOyH,WAAa,IAE1DC,QAAS,kBA9BvB/F,EAASjB,EADsB6G,EA+BsB9G,SA7BrDkB,EAASD,EAAYrE,EAASkK,IAFA,IAACA,GA0BnB,SAOG9G,KARIA,a,oBC4BRkH,GA7DQ,WACrB,IAAMhG,EAAWY,cACjB,EAAiE2B,IAC/D,SAAChG,GAAD,OAAWA,EAAMP,aADXC,EAAR,EAAQA,mBAAoBC,EAA5B,EAA4BA,YAAaE,EAAzC,EAAyCA,oBAGzC,EAA6EmG,IAC3E,SAAChG,GAAD,OAAWA,EAAMZ,iBADXC,EAAR,EAAQA,uBAAwBD,EAAhC,EAAgCA,cAAeI,EAA/C,EAA+CA,iBAAkBL,EAAjE,EAAiEA,QAQjE,OAJAqI,qBAAU,WACR/D,EhBCmB,WAAe,IAAdlB,EAAa,uDAAN,EAC7B,8CAAO,WAAOkB,GAAP,iBAAAC,EAAA,sEAEHD,EAASZ,KAFN,SAGoBc,MAAM,GAAD,OAAItC,GAAJ,OAA0BkB,GAAQS,GAH3D,cAGGG,EAHH,gBAIyBD,EAAcC,GAJvC,OAIGuG,EAJH,OAMH7F,YAAW,WACTJ,EAASX,EAA2B4G,EAAc5F,UACjD,KARA,kDAUHC,QAAQC,IAAR,MACAH,YAAW,kBAAMJ,EAAS5D,EAAoB8B,MAAuB,KAXlE,0DAAP,sDgBFWgI,CAAehK,MACvB,CAACA,IAGF,sBAAMkC,UAAWC,KAAO8H,KAAxB,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOC,OAAK,EAACC,KAAMtI,EAAnB,UACG9B,GAAsB,cAAC,GAAD,KACrBA,GAAsBG,GACtB,oBAAIgC,UAAWC,KAAOY,QAAtB,SAAgC7C,KAEhCH,IAAuBG,GACvB,qCACE,oBAAIgC,UAAWC,KAAOsE,MAAtB,wIACA,cAAC,GAAD,IACA,cAAC,GAAD,UAKN,cAAC,IAAD,CAAOyD,OAAK,EAACC,KAAI,WAAMrI,EAAN,YAAjB,SACE,cAAC,GAAD,MAGF,eAAC,IAAD,CAAOoI,OAAK,EAACC,KAAI,WAAMpI,GAAvB,UACGrC,GAA0B,cAAC,GAAD,KACzBA,GAA0BG,GAC1B,oBAAIqC,UAAWC,KAAOY,QAAtB,SAAgClD,KAEhCH,IAA2BG,GAAgC,KAAZL,GAC/C,oBAAI0C,UAAWC,KAAOY,QAAtB,SrB3CyB,4HqB6CzBrD,KAA4BF,GAAW4K,SAAS3K,EAAcmJ,SAC9D,oBAAI1G,UAAWC,KAAOY,QAAtB,SrB/C6B,kGqBiD7BrD,KAA4BF,GAAW4K,QAAQ3K,EAAcmJ,SAC7D,qCACE,cAAC,GAAD,IACA,cAAC,GAAD,UAKN,cAAC,IAAD,CAAOsB,OAAK,EAACC,KAAI,WAAMvI,GAAvB,SACE,cAAC,GAAD,Y,oBChDKyI,GAhBO,WACpB,IAAMvB,EAAWC,cAEjB,OACE,sBAAK7G,UAAWC,KAAOS,KAAvB,UACE,eAAC,IAAD,CAAUtB,MAAOA,EAAjB,UACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,EAAD,OAGF,cAAC,IAAD,UtBbuB,mCsBafwH,EAASI,UAA8B,cAAC,IAAD,CAAUvD,GAAI9D,UCfnEyI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACA,cAAC,GAAD,QAIFC,SAASC,eAAe,W","file":"static/js/main.4707a322.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"styles_section__2YXE6\",\"title\":\"styles_title__1h5RX\",\"text\":\"styles_text__1TSHF\",\"taskListItem\":\"styles_taskListItem__GKLkf\",\"subTitle\":\"styles_subTitle__3_s-5\",\"toolsList\":\"styles_toolsList__3VBLY\",\"toolsListItem\":\"styles_toolsListItem__3sVDE\",\"logoImg\":\"styles_logoImg__2QsCb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"styles_section__I5HRu\",\"backgroundImage\":\"styles_backgroundImage__9YDYu\",\"poster\":\"styles_poster__2AKHN\",\"title\":\"styles_title__3KIDY\",\"subtitle\":\"styles_subtitle__3ttpr\",\"genresList\":\"styles_genresList__3qXt1\",\"genresListItem\":\"styles_genresListItem__1PJ5I\",\"heading\":\"styles_heading__wCRsf\",\"text\":\"styles_text__2r4bn\",\"message\":\"styles_message__1un53\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"styles_pagination__2CxhI\",\"list\":\"styles_list__39e39\",\"listItem\":\"styles_listItem__3RWZq\",\"link\":\"styles_link__2Vezt\",\"activeLink\":\"styles_activeLink__3mSUx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__1jSbD\",\"logo\":\"styles_logo__1GCOD\",\"list\":\"styles_list__3mr8O\",\"listItem\":\"styles_listItem__2CJsJ\",\"link\":\"styles_link__1HY-i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__3MgUV\",\"image\":\"styles_image__v67F9\",\"content\":\"styles_content__23Uz9\",\"title\":\"styles_title__2XCi6\",\"rating\":\"styles_rating___kXbW\",\"genre\":\"styles_genre__8qOhb\",\"desctiption\":\"styles_desctiption__3jHNj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__35Tjr\",\"list\":\"styles_list__xmeDr\",\"link\":\"styles_link__20-a4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__jZ9tO\",\"title\":\"styles_title__QQaes\",\"message\":\"styles_message__2KA1a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"styles_formContainer__2VWLy\",\"form\":\"styles_form__2aHf2\",\"input\":\"styles_input__R0aKi\",\"submitButton\":\"styles_submitButton__1eobm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"styles_footer__3IJvn\",\"text\":\"styles_text__n-Z27\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"styles_preloader__V1zZv\",\"text\":\"styles_text__1pyb9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"genresListItem\":\"styles_genresListItem__1p_OW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"styles_page__2Aw4X\"};","export enum MovieActionTypes {\r\n  FETCH_MOVIE = 'FETCH_MOVIE',\r\n  FETCH_MOVIE_SUCCESS = 'FETCH_MOVIE_SUCCESS',\r\n  FETCH_MOVIE_ERROR = 'FETCH_MOVIE_ERROR'\r\n}\r\n\r\nexport interface IFetchMovieAction {\r\n  type: MovieActionTypes.FETCH_MOVIE;\r\n}\r\n\r\nexport interface IFetchMovieSuccessAction {\r\n  type: MovieActionTypes.FETCH_MOVIE_SUCCESS;\r\n  payload: IMovie;\r\n}\r\n\r\nexport interface IFetchMovieErrorAction {\r\n  type: MovieActionTypes.FETCH_MOVIE_ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport type MovieActions = IFetchMovieAction | IFetchMovieSuccessAction | IFetchMovieErrorAction;\r\n\r\nexport interface IMovie {\r\n  filmId: number;\r\n  nameRu: string;\r\n  nameEn: string;\r\n  webUrl: string;\r\n  posterUrl: string;\r\n  year: number;\r\n  filmLength: string;\r\n  slogan: string;\r\n  description: string;\r\n  type: string;\r\n  countries: { country: string }[];\r\n  genres: { genre: string }[];\r\n  rating: IMovieRating;\r\n  images: IMovieImages;\r\n  [key: string]: any;\r\n}\r\ninterface IMovieRating {\r\n  rating: number;\r\n  ratingVoteCount: number;\r\n  ratingImdb: number;\r\n  ratingImdbVoteCount: number;\r\n  [key: string]: any;\r\n}\r\n\r\ninterface IMovieImages {\r\n  posters: {\r\n    url: string;\r\n    [key: string]: any;\r\n  }[];\r\n}\r\n\r\nexport interface IMovieState {\r\n  movie: IMovie;\r\n  isLoading: boolean;\r\n  movieError: null | string;\r\n}\r\n","import { IMovieState, MovieActions, MovieActionTypes } from '../../types/movieTypes';\r\n\r\nconst initialState: IMovieState = {\r\n  movie: {\r\n    filmId: 0,\r\n    nameRu: '',\r\n    nameEn: '',\r\n    webUrl: '',\r\n    posterUrl: '',\r\n    year: 0,\r\n    filmLength: '',\r\n    slogan: '',\r\n    description: '',\r\n    type: '',\r\n    countries: [],\r\n    genres: [],\r\n    rating: {\r\n      rating: 0,\r\n      ratingVoteCount: 0,\r\n      ratingImdb: 0,\r\n      ratingImdbVoteCount: 0,\r\n    },\r\n    images: {\r\n      posters: [],\r\n    },\r\n  },\r\n  isLoading: false,\r\n  movieError: null,\r\n};\r\n\r\nexport const movieReducer = (state = initialState, action: MovieActions): IMovieState => {\r\n  switch (action.type) {\r\n    case MovieActionTypes.FETCH_MOVIE: {\r\n      return { ...state, isLoading: true };\r\n    }\r\n    case MovieActionTypes.FETCH_MOVIE_SUCCESS: {\r\n      return { ...state, movie: action.payload, isLoading: false };\r\n    }\r\n\r\n    case MovieActionTypes.FETCH_MOVIE_ERROR: {\r\n      return { ...state, movieError: action.payload, isLoading: false };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { IMovie } from './movieTypes';\r\n\r\nexport interface ISearchMovieState {\r\n  keyword: string;\r\n  searchResults: IMovie[];\r\n  isSearchResultsLoading: boolean;\r\n  searchResultsCurrentPage: number;\r\n  searchResultsPagesCount: number;\r\n  searchMovieError: string | null;\r\n}\r\n\r\nexport enum SearchMovieActionTypes {\r\n  SEARCH_MOVIE = 'SEARCH_MOVIE',\r\n  SEARCH_MOVIE_SUCCESS = 'SEARCH_MOVIE_SUCCESS',\r\n  SEARCH_MOVIE_ERROR = 'SEARCH_MOVIE_ERROR',\r\n  SET_SEARCH_MOVIE_PAGE = 'SET_SEARCH_MOVIE_PAGE',\r\n  SET_SEARCH_KEYWORD = 'SET_SEARCH_KEYWORD',\r\n  SET_SEARCH_PAGES_COUNT = 'SET_SEARCH_PAGES_COUNT',\r\n}\r\n\r\nexport interface ISearchMovieError {\r\n  type: SearchMovieActionTypes.SEARCH_MOVIE_ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport interface ISearchMovieAction {\r\n  type: SearchMovieActionTypes.SEARCH_MOVIE;\r\n}\r\n\r\nexport interface ISearchSuccessAction {\r\n  type: SearchMovieActionTypes.SEARCH_MOVIE_SUCCESS;\r\n  payload: IMovie[];\r\n}\r\n\r\nexport interface ISetSearchMoviePage {\r\n  type: SearchMovieActionTypes.SET_SEARCH_MOVIE_PAGE;\r\n  payload: number;\r\n}\r\n\r\nexport interface ISetSearchKeyword {\r\n  type: SearchMovieActionTypes.SET_SEARCH_KEYWORD;\r\n  payload: string;\r\n}\r\n\r\nexport interface ISetSearchPagesCount {\r\n  type: SearchMovieActionTypes.SET_SEARCH_PAGES_COUNT;\r\n  payload: number;\r\n}\r\n\r\nexport type SearchMovieActions =\r\n  | ISearchMovieAction\r\n  | ISearchSuccessAction\r\n  | ISetSearchMoviePage\r\n  | ISetSearchKeyword\r\n  | ISetSearchPagesCount\r\n  | ISearchMovieError;\r\n","import {\r\n  ISearchMovieState,\r\n  SearchMovieActions,\r\n  SearchMovieActionTypes,\r\n} from '../../types/searchTypes';\r\n\r\nconst initialState: ISearchMovieState = {\r\n  keyword: '',\r\n  searchResults: [],\r\n  isSearchResultsLoading: false,\r\n  searchResultsCurrentPage: 1,\r\n  searchResultsPagesCount: 0,\r\n  searchMovieError: null,\r\n};\r\n\r\nexport const searchMovieReducer = (\r\n  state = initialState,\r\n  action: SearchMovieActions\r\n): ISearchMovieState => {\r\n  switch (action.type) {\r\n    case SearchMovieActionTypes.SEARCH_MOVIE: {\r\n      return { ...state, isSearchResultsLoading: true };\r\n    }\r\n    case SearchMovieActionTypes.SEARCH_MOVIE_SUCCESS: {\r\n      return { ...state, isSearchResultsLoading: false, searchResults: action.payload };\r\n    }\r\n    case SearchMovieActionTypes.SET_SEARCH_MOVIE_PAGE: {\r\n      return { ...state, searchResultsCurrentPage: action.payload };\r\n    }\r\n    case SearchMovieActionTypes.SET_SEARCH_KEYWORD: {\r\n      return { ...state, keyword: action.payload };\r\n    }\r\n    case SearchMovieActionTypes.SET_SEARCH_PAGES_COUNT: {\r\n      return { ...state, searchResultsPagesCount: action.payload };\r\n    }\r\n    case SearchMovieActionTypes.SEARCH_MOVIE_ERROR: {\r\n      return { ...state, isSearchResultsLoading: false, searchMovieError: action.payload };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { IMovie } from './movieTypes';\r\n\r\nexport interface ITopMovieState {\r\n  topMovies: IMovie[];\r\n  isTopMoviesLoading: boolean;\r\n  currentPage: number;\r\n  pagesCount: number;\r\n  fetchTopMoviesError: null | string;\r\n}\r\n\r\nexport interface ITopMoviesError {\r\n  type: TopMovieActionTypes.FETCH_TOP_MOVIES_ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport enum TopMovieActionTypes {\r\n  FETCH_TOP_MOVIES = 'FETCH_TOP_MOVIES',\r\n  FETCH_TOP_MOVIES_SUCCESS = 'FETCH_TOP_MOVIES_SUCCESS',\r\n  FETCH_TOP_MOVIES_ERROR = 'FETCH_TOP_MOVIES_ERROR',\r\n  SET_TOP_MOVIE_PAGE = 'SET_TOP_MOVIE_PAGE',\r\n}\r\n\r\nexport interface IFetchTopMoviesAction {\r\n  type: TopMovieActionTypes.FETCH_TOP_MOVIES;\r\n}\r\n\r\nexport interface IFetchTopMoviesSuccessAction {\r\n  type: TopMovieActionTypes.FETCH_TOP_MOVIES_SUCCESS;\r\n  payload: IMovie[];\r\n}\r\n\r\nexport interface ISetTopMoviePage {\r\n  type: TopMovieActionTypes.SET_TOP_MOVIE_PAGE;\r\n  payload: number;\r\n}\r\n\r\nexport type TopMovieAction =\r\n  | IFetchTopMoviesAction\r\n  | IFetchTopMoviesSuccessAction\r\n  | ISetTopMoviePage\r\n  | ITopMoviesError;\r\n","import { ITopMovieState, TopMovieActionTypes, TopMovieAction } from '../../types/topMoviesTypes';\r\n\r\nconst initialState: ITopMovieState = {\r\n  topMovies: [],\r\n  isTopMoviesLoading: false,\r\n  currentPage: 1,\r\n  pagesCount: 5,\r\n  fetchTopMoviesError: null,\r\n};\r\n\r\nexport const topMovieReducer = (state = initialState, action: TopMovieAction): ITopMovieState => {\r\n  switch (action.type) {\r\n    case TopMovieActionTypes.FETCH_TOP_MOVIES: {\r\n      return { ...state, isTopMoviesLoading: true };\r\n    }\r\n    case TopMovieActionTypes.FETCH_TOP_MOVIES_SUCCESS: {\r\n      return { ...state, topMovies: action.payload, isTopMoviesLoading: false };\r\n    }\r\n    case TopMovieActionTypes.SET_TOP_MOVIE_PAGE: {\r\n      return { ...state, currentPage: action.payload };\r\n    }\r\n    case TopMovieActionTypes.FETCH_TOP_MOVIES_ERROR: {\r\n      return { ...state, isTopMoviesLoading: false, fetchTopMoviesError: action.payload };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { movieReducer } from './movieReducer';\r\nimport { searchMovieReducer } from './searchMovieReducer';\r\nimport { topMovieReducer } from './topMovieReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  topMovies: topMovieReducer,\r\n  singleMovie: movieReducer,\r\n  searchResults: searchMovieReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import {applyMiddleware, createStore} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './reducers';\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))","export const BASE_TOP_MOVIES_URL =\r\n  'https://kinopoiskapiunofficial.tech/api/v2.2/films/top?type=TOP_100_POPULAR_FILMS&page=';\r\n\r\nexport const BASE_FETCH_URL = 'https://kinopoiskapiunofficial.tech/api';\r\nexport const ABOUT_PAGE = 'about-page';\r\nexport const MAIN_PAGE = '/';\r\nexport const MOVIE_PAGE = 'movie';\r\nexport const SEARCH_PAGE = 'search';\r\nexport const GH_PAGES_PATH = '/typescript-kinopoisk-explorer';\r\n\r\nexport const MAX_PAGES_COUNT = 20;\r\n// Ограничения АПИ: более 20 страниц получить нельзя,\r\n// хотя в возвращаемом объекте в свойстве pagesCount\r\n// может быть более 20 старниц\r\n\r\nexport const FETCH_ERROR_MESSAGE = 'На сервере произошла ошибка';\r\nexport const NO_SEARCH_RESULTS_MESSAGE = 'Ничего не найдено';\r\nexport const NO_SEARCH_YET_MESSAGE = 'Вы еще ничего не искали';\r\n","import styles from './styles.module.css';\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <footer className={styles.footer}>\r\n      <span className={styles.text}>{new Date().getFullYear()}</span>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { IMovie } from '../../types/movieTypes';\r\nimport {\r\n  ISearchMovieAction,\r\n  ISearchMovieError,\r\n  ISearchSuccessAction,\r\n  ISetSearchKeyword,\r\n  ISetSearchMoviePage,\r\n  ISetSearchPagesCount,\r\n  SearchMovieActionTypes,\r\n} from '../../types/searchTypes';\r\n\r\nexport const searchMovieAction = (): ISearchMovieAction => {\r\n  return {\r\n    type: SearchMovieActionTypes.SEARCH_MOVIE,\r\n  };\r\n};\r\n\r\nexport const searchMovieSuccessAction = (movies: IMovie[]): ISearchSuccessAction => {\r\n  return {\r\n    type: SearchMovieActionTypes.SEARCH_MOVIE_SUCCESS,\r\n    payload: movies,\r\n  };\r\n};\r\n\r\nexport const setSearchPagesCount = (page: number): ISetSearchPagesCount => {\r\n  return {\r\n    type: SearchMovieActionTypes.SET_SEARCH_PAGES_COUNT,\r\n    payload: page,\r\n  };\r\n};\r\n\r\nexport const setSearchPageAction = (page: number): ISetSearchMoviePage => {\r\n  return {\r\n    type: SearchMovieActionTypes.SET_SEARCH_MOVIE_PAGE,\r\n    payload: page,\r\n  };\r\n};\r\n\r\nexport const setSearchKeywordAction = (keyword: string): ISetSearchKeyword => {\r\n  return {\r\n    type: SearchMovieActionTypes.SET_SEARCH_KEYWORD,\r\n    payload: keyword,\r\n  };\r\n};\r\n\r\nexport const searchMovieError = (message: string): ISearchMovieError => {\r\n  return {\r\n    type: SearchMovieActionTypes.SEARCH_MOVIE_ERROR,\r\n    payload: message,\r\n  };\r\n};\r\n","import {\r\n  IFetchMovieAction,\r\n  IFetchMovieErrorAction,\r\n  IFetchMovieSuccessAction,\r\n  IMovie,\r\n  MovieActionTypes,\r\n} from '../../types/movieTypes';\r\n\r\nexport const fetchMovieAction = (): IFetchMovieAction => {\r\n  return {\r\n    type: MovieActionTypes.FETCH_MOVIE,\r\n  };\r\n};\r\n\r\nexport const fetchMovieSuccessAction = (movieData: IMovie): IFetchMovieSuccessAction => {\r\n  return {\r\n    type: MovieActionTypes.FETCH_MOVIE_SUCCESS,\r\n    payload: movieData,\r\n  };\r\n};\r\n\r\nexport const fetchMovieError = (message: string): IFetchMovieErrorAction => {\r\n  return {\r\n    type: MovieActionTypes.FETCH_MOVIE_ERROR,\r\n    payload: message,\r\n  };\r\n};\r\n","import { IMovie } from '../../types/movieTypes';\r\nimport {\r\n  IFetchTopMoviesAction,\r\n  IFetchTopMoviesSuccessAction,\r\n  ISetTopMoviePage,\r\n  ITopMoviesError,\r\n  TopMovieActionTypes,\r\n} from '../../types/topMoviesTypes';\r\n\r\nexport const fetchTopMoviesAction = (): IFetchTopMoviesAction => {\r\n  return {\r\n    type: TopMovieActionTypes.FETCH_TOP_MOVIES,\r\n  };\r\n};\r\n\r\nexport const fetchTopMovieSuccessAction = (moviesList: IMovie[]): IFetchTopMoviesSuccessAction => {\r\n  return {\r\n    type: TopMovieActionTypes.FETCH_TOP_MOVIES_SUCCESS,\r\n    payload: moviesList,\r\n  };\r\n};\r\n\r\nexport const setTopMoviePageAction = (page: number): ISetTopMoviePage => {\r\n  return {\r\n    type: TopMovieActionTypes.SET_TOP_MOVIE_PAGE,\r\n    payload: page,\r\n  };\r\n};\r\n\r\nexport const fetchTopMoviesError = (message: string): ITopMoviesError => {\r\n  return {\r\n    type: TopMovieActionTypes.FETCH_TOP_MOVIES_ERROR,\r\n    payload: message,\r\n  };\r\n};\r\n","import { Dispatch } from 'redux';\r\nimport {\r\n  searchMovieAction,\r\n  searchMovieError,\r\n  searchMovieSuccessAction,\r\n  setSearchKeywordAction,\r\n  setSearchPagesCount,\r\n} from '../store/actionCreators/searchMovieActionCreators';\r\nimport {\r\n  fetchMovieAction,\r\n  fetchMovieError,\r\n  fetchMovieSuccessAction,\r\n} from '../store/actionCreators/singleMovieActionCreators';\r\nimport {\r\n  fetchTopMoviesAction,\r\n  fetchTopMoviesError,\r\n  fetchTopMovieSuccessAction,\r\n} from '../store/actionCreators/topMoviesActionCreators';\r\nimport { MovieActions } from '../types/movieTypes';\r\nimport { SearchMovieActions } from '../types/searchTypes';\r\nimport { TopMovieAction } from '../types/topMoviesTypes';\r\nimport { BASE_FETCH_URL, BASE_TOP_MOVIES_URL, FETCH_ERROR_MESSAGE } from './constants';\r\n\r\nconst options = {\r\n  headers: { 'X-API-KEY': '6f236faa-05c4-47ab-90cb-cb534e2732e8' },\r\n};\r\n\r\nconst checkResponse = (response: Response) => {\r\n  return response.ok ? response.json() : Promise.reject(`Ошибка с фронта`);\r\n};\r\n\r\nconst fetchTopMovies = (page = 1) => {\r\n  return async (dispatch: Dispatch<TopMovieAction>) => {\r\n    try {\r\n      dispatch(fetchTopMoviesAction());\r\n      const response = await fetch(`${BASE_TOP_MOVIES_URL}${page}`, options);\r\n      const topMoviesData = await checkResponse(response);\r\n\r\n      setTimeout(() => {\r\n        dispatch(fetchTopMovieSuccessAction(topMoviesData.films));\r\n      }, 400);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setTimeout(() => dispatch(fetchTopMoviesError(FETCH_ERROR_MESSAGE)), 400);\r\n    }\r\n  };\r\n};\r\n\r\nconst fetchMovie = (filmId: string) => {\r\n  return async (dispatch: Dispatch<MovieActions>) => {\r\n    try {\r\n      dispatch(fetchMovieAction());\r\n      const response = await fetch(`${BASE_FETCH_URL}/v2.1/films/${filmId}`, options);\r\n      const movieData = await checkResponse(response);\r\n\r\n      setTimeout(() => dispatch(fetchMovieSuccessAction(movieData.data)), 400);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setTimeout(() => dispatch(fetchMovieError(FETCH_ERROR_MESSAGE)), 400);\r\n    }\r\n  };\r\n};\r\n\r\nconst searchMovie = (keyword?: string, page = 1) => {\r\n  return async (dispatch: Dispatch<SearchMovieActions>) => {\r\n    try {\r\n      dispatch(searchMovieAction());\r\n      const response = await fetch(\r\n        `${BASE_FETCH_URL}/v2.1/films/search-by-keyword?keyword=${keyword}&page=${page}`,\r\n        options\r\n      );\r\n      const searchResultsData = await checkResponse(response);\r\n\r\n      setTimeout(() => {\r\n        dispatch(setSearchPagesCount(searchResultsData.pagesCount));\r\n        dispatch(searchMovieSuccessAction(searchResultsData.films));\r\n        dispatch(setSearchKeywordAction(searchResultsData.keyword));\r\n      }, 400);\r\n    } catch (err) {\r\n      setTimeout(() => dispatch(searchMovieError(FETCH_ERROR_MESSAGE)), 400);\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport { fetchTopMovies, fetchMovie, searchMovie };\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { setSearchPageAction } from '../../store/actionCreators/searchMovieActionCreators';\r\nimport { searchMovie } from '../../utils/api';\r\nimport { SEARCH_PAGE } from '../../utils/constants';\r\nimport styles from './styles.module.css';\r\n\r\nconst SearchForm: React.FC = () => {\r\n  const [input, setInput] = useState<string>('');\r\n  const dispatch = useDispatch()\r\n  const history = useHistory();\r\n\r\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = (e): void => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit: React.FormEventHandler<HTMLFormElement> = (e): void => {\r\n    e.preventDefault();\r\n    \r\n    dispatch(searchMovie(input));\r\n    history.push(`/${SEARCH_PAGE}`)\r\n    setInput('');\r\n    dispatch(setSearchPageAction(1));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.formContainer}>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <input\r\n          className={styles.input}\r\n          onChange={handleChange}\r\n          value={input}\r\n          placeholder='Название фильма'\r\n          autoComplete='off'\r\n        />\r\n        <button className={styles.submitButton} type='submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","export default __webpack_public_path__ + \"static/media/logo.84c1e32f.svg\";","import SearchForm from '../SearchForm/SearchForm';\r\nimport styles from './styles.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Logo from '../../images/logo.svg';\r\nimport { ABOUT_PAGE, MAIN_PAGE } from '../../utils/constants';\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <Link to={MAIN_PAGE}>\r\n        <img src={Logo} alt='Лого' className={styles.logo} />\r\n      </Link>\r\n\r\n      <SearchForm />\r\n      <ul className={styles.list}>\r\n        <li className={styles.listItem}>\r\n          <Link to={`/${ABOUT_PAGE}`} className={styles.link}>\r\n            О проекте\r\n          </Link>\r\n        </li>\r\n        <li className={styles.listItem}>\r\n          <a\r\n            href='https://github.com/rizametovd/typescript-kinopoisk-explorer'\r\n            className={styles.link}\r\n            target='_blank'\r\n            rel='noreferrer'\r\n          >\r\n            Репозиторий проекта\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store/reducers\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector","export default __webpack_public_path__ + \"static/media/react-logo.e68b35f4.svg\";","export default __webpack_public_path__ + \"static/media/ts-logo.e0cf5672.svg\";","export default __webpack_public_path__ + \"static/media/redux-logo.0e4fb1c8.svg\";","import styles from './styles.module.css';\r\nimport ReactLogo from '../../images/react-logo.svg';\r\nimport TypeScriptLogo from '../../images/ts-logo.svg';\r\nimport ReduxLogo from '../../images/redux-logo.svg';\r\n\r\nconst AboutPage: React.FC = () => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h1 className={styles.title}>О проекте</h1>\r\n      <p className={styles.text}>Пэт проект. Поиск фильмов по базе Кинопоиска.</p>\r\n\r\n      <h2 className={styles.subTitle}>Задача</h2>\r\n      <ul className={styles.taskList}>\r\n        <li className={styles.taskListItem}>Адаптивно сверстать</li>\r\n        <li className={styles.taskListItem}>Типизировать компоненты</li>\r\n        <li className={styles.taskListItem}>Для хранения данных использовать Redux</li>\r\n      </ul>\r\n\r\n      <h2 className={styles.subTitle}>Инструменты</h2>\r\n      <ul className={styles.toolsList}>\r\n        <li className={styles.toolsListItem}>\r\n          <img src={ReactLogo} alt='Логотип Реакта' className={styles.logoImg} />\r\n          <span>React</span>\r\n        </li>\r\n        <li className={styles.toolsListItem}>\r\n          <img src={TypeScriptLogo} alt='Логотип TypeScript' className={styles.logoImg} />\r\n          <span>TypeScript</span>\r\n        </li>\r\n        <li className={styles.toolsListItem}>\r\n          <img src={ReduxLogo} alt='Логотип Redux' className={styles.logoImg} />\r\n          <span>Redux</span>\r\n        </li>\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AboutPage;\r\n","import styles from './styles.module.css';\r\n\r\nexport const Preloader: React.FC = () => {\r\n    return (\r\n        <div className={styles.preloader}>\r\n            <p className={styles.text}>Загрузка...</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import styles from './styles.module.css';\r\n\r\ninterface IGenresProps {\r\n  genre: string;\r\n}\r\n\r\nconst Genres: React.FC<IGenresProps> = ({ genre }) => {\r\n  return (\r\n    <li className={styles.genresListItem}>{genre.charAt(0).toUpperCase() + genre.slice(1)}</li>\r\n  );\r\n};\r\n\r\nexport default Genres;\r\n","import styles from './styles.module.css';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { fetchMovie } from '../../utils/api';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport Genres from '../Genres/Genres';\r\n\r\ninterface IMovieProps {\r\n  filmId: string;\r\n}\r\n\r\nconst MoviePage: React.FC = () => {\r\n  const { filmId } = useParams<IMovieProps>();\r\n  const dispatch = useDispatch();\r\n  const { isLoading, movie, movieError } = useTypedSelector((state) => state.singleMovie);\r\n  const { nameRu, nameEn, description, posterUrl, year, genres, filmLength } = movie;\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchMovie(filmId));\r\n  }, [filmId]);\r\n\r\n  return (\r\n    <section className={styles.section}>\r\n      <div\r\n        className={styles.backgroundImage}\r\n        style={{ backgroundImage: `url(${posterUrl})` }}\r\n      ></div>\r\n\r\n      {isLoading && <Preloader />}\r\n      {!isLoading && !!movieError && <h1 className={styles.message}>{movieError}</h1>}\r\n\r\n      {!isLoading && !movieError && (\r\n        <>\r\n          <img src={posterUrl} alt='Постер' className={styles.poster} />\r\n          <div>\r\n            <h1 className={styles.title}>{nameRu}</h1>\r\n            <h2 className={styles.subtitle}>\r\n              {nameEn && `${nameEn}, `}\r\n              <span>{year}</span>\r\n            </h2>\r\n            {filmLength && <p className={styles.subtitle}>Продолжительность: {filmLength} ч</p>}\r\n\r\n            <ul className={styles.genresList}>\r\n              {genres.map(({ genre }, idx) => (\r\n                <Genres genre={genre} key={idx} />\r\n              ))}\r\n            </ul>\r\n\r\n            <h3 className={styles.heading}>Описание</h3>\r\n            <p className={styles.text}>{description}</p>\r\n          </div>\r\n        </>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MoviePage;\r\n","import styles from './styles.module.css';\r\n// import { IMovie } from '../../types/topMoviesTypes';\r\nimport { IMovie } from '../../types/movieTypes';\r\n\r\nconst MovieCard: React.FC<IMovie> = ({ nameRu, rating, genres, posterUrl }) => {\r\n  return (\r\n    <div className={styles.card}>\r\n      <img src={posterUrl} alt='Обложка' className={styles.image} />\r\n      <div className={styles.content}>\r\n        <h2 className={styles.title}>{nameRu}</h2>\r\n        <p className={styles.rating}>Рейтинг: {rating}/10</p>\r\n        {genres.map(({ genre }, idx) => {\r\n          if (genres.length === idx + 1) {\r\n            return (\r\n              <span key={idx} className={styles.genre}>\r\n                {genre}\r\n              </span>\r\n            );\r\n          }\r\n          return (\r\n            <span key={idx} className={styles.genre}>\r\n              {genre},{' '}\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import { Link, useLocation } from 'react-router-dom';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { MOVIE_PAGE, SEARCH_PAGE } from '../../utils/constants';\r\nimport MovieCard from '../MovieCard/MovieCard';\r\nimport styles from './styles.module.css';\r\n\r\nconst MoviesList: React.FC = () => {\r\n  const location = useLocation();\r\n  const topMovies = useTypedSelector((state) => state.topMovies.topMovies);\r\n  const searchResultMovies = useTypedSelector((state) => state.searchResults.searchResults);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <ul className={styles.list}>\r\n        {location.pathname === `/${SEARCH_PAGE}` ? (\r\n          <>\r\n            {searchResultMovies.map((movie) => (\r\n              <li key={movie.filmId} className={styles.listItem}>\r\n                <Link to={`/${MOVIE_PAGE}/${movie.filmId}`} className={styles.link}>\r\n                  <MovieCard {...movie} />\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </>\r\n        ) : (\r\n          <>\r\n            {topMovies.map((movie) => (\r\n              <li key={movie.filmId} className={styles.listItem}>\r\n                <Link to={`/${MOVIE_PAGE}/${movie.filmId}`} className={styles.link}>\r\n                  <MovieCard {...movie} />\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesList;\r\n","import { MAX_PAGES_COUNT } from './constants';\r\n\r\nexport const handlePagesCounts = (\r\n  pages: number[],\r\n  pagesCount: number,\r\n  currentPage: number\r\n): void => {\r\n  if (pagesCount > 5) {\r\n    if (currentPage >= 3) {\r\n      for (let i = currentPage - 2; i <= currentPage + 2; i++) {\r\n        pages.push(i);\r\n        if (i === MAX_PAGES_COUNT) break;\r\n      }\r\n    } else {\r\n      for (let i = 1; i <= 5; i++) {\r\n        pages.push(i);\r\n        if (i === MAX_PAGES_COUNT) break;\r\n      }\r\n    }\r\n  } else {\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n      pages.push(i);\r\n    }\r\n  }\r\n};\r\n","import { useDispatch } from 'react-redux';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { setSearchPageAction } from '../../store/actionCreators/searchMovieActionCreators';\r\nimport { setTopMoviePageAction } from '../../store/actionCreators/topMoviesActionCreators';\r\nimport { searchMovie } from '../../utils/api';\r\nimport { MAIN_PAGE } from '../../utils/constants';\r\nimport { handlePagesCounts } from '../../utils/handlePagesCounts';\r\nimport styles from './styles.module.css';\r\n\r\nconst Pagination: React.FC = () => {\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const { pagesCount, currentPage } = useTypedSelector((state) => state.topMovies);\r\n  const { searchResultsPagesCount, searchResultsCurrentPage, keyword } = useTypedSelector(\r\n    (state) => state.searchResults\r\n  );\r\n\r\n  const searchMoviePaginationPages: number[] = [];\r\n  const topMovieePaginationPages: number[] = [];\r\n\r\n  handlePagesCounts(topMovieePaginationPages, pagesCount, currentPage);\r\n  handlePagesCounts(searchMoviePaginationPages, searchResultsPagesCount, searchResultsCurrentPage);\r\n\r\n  const onTopMoviesPaginationClick = (p: number) => {\r\n    dispatch(setTopMoviePageAction(p));\r\n  };\r\n\r\n  const onSearchPaginationClick = (p: number) => {\r\n    dispatch(setSearchPageAction(p));\r\n    dispatch(searchMovie(keyword, p));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.pagination}>\r\n      <ul className={styles.list}>\r\n        {location.pathname === MAIN_PAGE ? (\r\n          <>\r\n            {topMovieePaginationPages.map((page) => (\r\n              <li key={page} className={styles.listItem}>\r\n                <Link\r\n                  to='#'\r\n                  className={`${styles.link} ${currentPage === page ? styles.activeLink : ''}`}\r\n                  onClick={() => onTopMoviesPaginationClick(page)}\r\n                >\r\n                  {page}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </>\r\n        ) : (\r\n          <>\r\n            {searchMoviePaginationPages.map((page) => (\r\n              <li key={page} className={styles.listItem}>\r\n                <Link\r\n                  to='#'\r\n                  className={`${styles.link} ${\r\n                    searchResultsCurrentPage === page ? styles.activeLink : ''\r\n                  }`}\r\n                  onClick={() => onSearchPaginationClick(page)}\r\n                >\r\n                  {page}\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { fetchTopMovies } from '../../utils/api';\r\nimport {\r\n  ABOUT_PAGE,\r\n  MAIN_PAGE,\r\n  MOVIE_PAGE,\r\n  NO_SEARCH_RESULTS_MESSAGE,\r\n  NO_SEARCH_YET_MESSAGE,\r\n  SEARCH_PAGE,\r\n} from '../../utils/constants';\r\nimport AboutPage from '../AboutPage/AboutPage';\r\nimport MoviePage from '../MoviePage/MoviePage';\r\nimport MoviesList from '../MoviesList/MoviesList';\r\nimport Pagination from '../Pagination/Pagination';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport styles from './styles.module.css';\r\n\r\nconst Main: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { isTopMoviesLoading, currentPage, fetchTopMoviesError } = useTypedSelector(\r\n    (state) => state.topMovies\r\n  );\r\n  const { isSearchResultsLoading, searchResults, searchMovieError, keyword } = useTypedSelector(\r\n    (state) => state.searchResults\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTopMovies(currentPage));\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <main className={styles.main}>\r\n      <Switch>\r\n        <Route exact path={MAIN_PAGE}>\r\n          {isTopMoviesLoading && <Preloader />}\r\n          {!isTopMoviesLoading && fetchTopMoviesError && (\r\n            <h1 className={styles.message}>{fetchTopMoviesError}</h1>\r\n          )}\r\n          {!isTopMoviesLoading && !fetchTopMoviesError && (\r\n            <>\r\n              <h1 className={styles.title}>Топ популярных фильмов</h1>\r\n              <MoviesList />\r\n              <Pagination />\r\n            </>\r\n          )}\r\n        </Route>\r\n\r\n        <Route exact path={`/${MOVIE_PAGE}/:filmId`}>\r\n          <MoviePage />\r\n        </Route>\r\n\r\n        <Route exact path={`/${SEARCH_PAGE}`}>\r\n          {isSearchResultsLoading && <Preloader />}\r\n          {!isSearchResultsLoading && searchMovieError && (\r\n            <h1 className={styles.message}>{searchMovieError}</h1>\r\n          )}\r\n          {!isSearchResultsLoading && !searchMovieError && keyword === '' && (\r\n            <h1 className={styles.message}>{NO_SEARCH_YET_MESSAGE}</h1>\r\n          )}\r\n          {!isSearchResultsLoading && !!keyword && Boolean(!searchResults.length) && (\r\n            <h1 className={styles.message}>{NO_SEARCH_RESULTS_MESSAGE}</h1>\r\n          )}\r\n          {!isSearchResultsLoading && !!keyword && Boolean(searchResults.length) && (\r\n            <>\r\n              <MoviesList />\r\n              <Pagination />\r\n            </>\r\n          )}\r\n        </Route>\r\n\r\n        <Route exact path={`/${ABOUT_PAGE}`}>\r\n          <AboutPage />\r\n        </Route>\r\n      </Switch>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { Provider } from 'react-redux';\r\nimport { Redirect, Route, useLocation } from 'react-router-dom';\r\nimport { store } from '../../store';\r\nimport { GH_PAGES_PATH, MAIN_PAGE } from '../../utils/constants';\r\nimport '../../vendor/normalize.css';\r\nimport Footer from '../Footer/Footer';\r\nimport Header from '../Header/Header';\r\nimport Main from '../Main/Main';\r\nimport styles from './styles.module.css';\r\n\r\nconst App: React.FC = () => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <div className={styles.page}>\r\n      <Provider store={store}>\r\n        <Header />\r\n        <Main />\r\n        <Footer />\r\n      </Provider>\r\n\r\n      <Route>{location.pathname === GH_PAGES_PATH && <Redirect to={MAIN_PAGE} />}</Route>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from './components/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}